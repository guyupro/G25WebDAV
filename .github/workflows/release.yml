name: Build and Release

on:
  push:
    tags:
      - 'v*'   # 仅在推送 v1.0.0 这样的 tag 时触发

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
      fail-fast: false

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.9'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Download dependencies
        run: go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          mkdir -p dist
          output_name="G25WebDAV-${GOOS}-${GOARCH}"
          if [ "$GOOS" = "windows" ]; then
            output_name+=".exe"
          fi
          echo "Building for $GOOS/$GOARCH..."
          go build -ldflags="-s -w" -o dist/$output_name main.go

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: G25WebDAV-binaries
          path: dist/

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: G25WebDAV-binaries
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
